---
# jstar-user role
# user account, env vars, etc.

# Create jstar user and group
- name: Create domainusers group
  become: yes
  group:
    name: domainusers
  tags: base

- name: Create docker group
  become: yes
  group:
    name: docker
  tags: base

- name:  Create jstar user and add jstar groups
  become: yes
  user:
    name: jstar
    password: $6$V3Ndgk1Nrw2sV8K3$lWX.czWkF4t0VfDI9XqmPyTf9BfoijVs5j8ug.xjZ1IUBEfz/kQXtmNsiRCY8JIbiVlthUW5tJ.B6RQ5gpT2n0
    group: domainusers
    groups: domainusers, dialout, docker
    shell: /bin/bash
  tags: base

# Change /opt/jstar directory ownership
- name: Change /opt/jstar directory ownership
  become: yes
  file:
    path: /opt/jstar
    state: directory
    owner: jstar
    group: domainusers
  tags: base

# Edit permissions for /opt/jstar
- name: Change /opt/jstar directory permissions
  become: yes
  file:
    path: /opt/jstar
    mode: '777'
  tags: base

# Configure jstar permissions, env, etc.
- name: Set jstar as owner of home directory
  become: yes
  ansible.builtin.file:
    path: /home/jstar
    state: directory
    recurse: yes
    owner: jstar
    group: domainusers
  tags: base
- name: Copy ssh keys to jstar
  become: yes
  block:
  - name: Touch .ssh
    file:
      path: /home/jstar/.ssh
      state: directory
      mode: '0700'
      owner: jstar
      group: domainusers
  - name: Create .ssh agent env file if it does not exist
    copy:
      content: ''
      dest: /home/jstar/.ssh/agent.env
      force: no
      mode: '0600'
      owner: jstar
      group: domainusers
- name:  Auto load ssh key
  become: yes
  blockinfile:
    path: /home/jstar/.bashrc
    create: yes
    owner: jstar
    group: domainusers
    marker: "# {mark} Ansible managed auto load ssh key block"
    block: |
        # Automatically load ssh key when a terminal is opened
        env=~/.ssh/agent.env
        agent_load_env () { test -f "$env" && . "$env" >| /dev/null ; }
        agent_start () {
            (umask 077; ssh-agent >| "$env")
            . "$env" >| /dev/null ; }
        agent_load_env
        # agent_run_state: 0=agent running w/ key; 1=agent w/o key; 2= agent not running
        agent_run_state=$(ssh-add -l >| /dev/null 2>&1; echo $?)
        if [ ! "$SSH_AUTH_SOCK" ] || [ $agent_run_state = 2 ]; then
            agent_start
            ssh-add
        elif [ "$SSH_AUTH_SOCK" ] && [ $agent_run_state = 1 ]; then
            ssh-add
        fi
        unset env
  tags: base
- name: Configure gdb
  become: yes
  lineinfile:
    path: /home/jstar/.gdbinit
    create: yes
    mode: '0666'
    owner: jstar
    group: domainusers
    line: 'handle all ignore nostop noprint'
  tags: base
